{"pageProps":{"note":{"id":"mi2yzsm134w3za8f9p0x1dx","title":"结构型模式","desc":"","updated":1663478834793,"created":1662989931946,"custom":{},"fname":"software-develop.design.Design Patterns.structrual patterns","type":"note","vault":{"fsPath":".","selfContained":true,"name":"knowledge"},"contentHash":"7ad758bfc3a09074a3bb8630ef788981","links":[{"from":{"id":"shs2x76gfjtvi20xxziz4k2","fname":"software-develop.design.Design Patterns","vaultName":"knowledge"},"type":"backlink","position":{"start":{"line":47,"column":1,"offset":1081},"end":{"line":47,"column":64,"offset":1144},"indent":[]},"value":"software-develop.design.Design Patterns.structrual patterns","alias":"software-develop.design.Design Patterns.structrual patterns"}],"anchors":{"适配器模式":{"type":"header","text":"适配器模式","value":"适配器模式","line":8,"column":0,"depth":2},"桥接模式":{"type":"header","text":"桥接模式","value":"桥接模式","line":14,"column":0,"depth":2},"组合模式":{"type":"header","text":"组合模式","value":"组合模式","line":20,"column":0,"depth":2},"装饰模式":{"type":"header","text":"装饰模式","value":"装饰模式","line":26,"column":0,"depth":2},"外观模式":{"type":"header","text":"外观模式","value":"外观模式","line":32,"column":0,"depth":2},"享元模式":{"type":"header","text":"享元模式","value":"享元模式","line":38,"column":0,"depth":2},"代理模式":{"type":"header","text":"代理模式","value":"代理模式","line":44,"column":0,"depth":2}},"children":[],"parent":"shs2x76gfjtvi20xxziz4k2","data":{}},"body":"<h1 id=\"结构型模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#结构型模式\"></a>结构型模式</h1>\n<h2 id=\"适配器模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#适配器模式\"></a>适配器模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/adapter\">适配器模式</a></p>\n<p><strong>适配器模式</strong>是一种结构型设计模式，它能使接口不兼容的对象能够相互合作。</p>\n<h2 id=\"桥接模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#桥接模式\"></a>桥接模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/bridge\">桥接模式</a></p>\n<p><strong>桥接模式</strong>是一种结构型设计模式，可将一个大类或一系列紧密相关的类拆分为抽象和实现两个独立的层次结构，从而能在开发时分别使用。</p>\n<h2 id=\"组合模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#组合模式\"></a>组合模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/composite\">组合模式</a></p>\n<p><strong>组合模式</strong>是一种结构型设计模式，你可以使用它将对象组合成树状结构，并且能像使用独立对象一样使用它们。</p>\n<h2 id=\"装饰模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#装饰模式\"></a>装饰模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/decorator\">装饰模式</a></p>\n<p>装饰模式是一种结构型设计模式，允许你通过将对象放入包含行为的特殊封装对象中来为原对象绑定新的行为。</p>\n<h2 id=\"外观模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#外观模式\"></a>外观模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/facade\">外观模式</a></p>\n<p><strong>外观模式</strong>是一种结构型设计模式，能为程序库、框架或其他复杂类提供一个简单的接口。</p>\n<h2 id=\"享元模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#享元模式\"></a>享元模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/flyweight\">享元模式</a></p>\n<p><strong>享元模式</strong>是一种结构型设计模式，它摒弃了在每个对象中保存所有数据的方式，通过共享多个对象所共有的相同状态，让你能在有限的内存容量中载入更多对象。</p>\n<h2 id=\"代理模式\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#代理模式\"></a>代理模式</h2>\n<p><a href=\"https://refactoringguru.cn/design-patterns/proxy\">代理模式</a></p>\n<p><strong>代理模式</strong>是一种结构型设计模式，让你能够提供对象的替代品或其占位符。代理控制着对于原对象的访问，并允许在将请求提交给对象前后进行一些处理。</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/shs2x76gfjtvi20xxziz4k2\">设计模式</a></li>\n</ul>","noteIndex":{"id":"20dxao0uf8892hiam7spier","title":"个人知识库","desc":"","updated":1663479223433,"created":1660230632683,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"knowledge"},"contentHash":"1e78e79c903519387a7746c3bab665d6","links":[{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"basic.software.operating-system","alias":"basic.software.operating-system","position":{"start":{"line":9,"column":3,"offset":105},"end":{"line":9,"column":38,"offset":140},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"basic.software.operating-system"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"security","alias":"security","position":{"start":{"line":10,"column":3,"offset":143},"end":{"line":10,"column":15,"offset":155},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"security"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"software-develop.design","alias":"software-develop.design","position":{"start":{"line":11,"column":3,"offset":158},"end":{"line":11,"column":30,"offset":185},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"software-develop.design"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"software-develop.design.Design Patterns","alias":"software-develop.design.Design Patterns","position":{"start":{"line":12,"column":3,"offset":188},"end":{"line":12,"column":46,"offset":231},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"software-develop.design.Design Patterns"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"software-develop.VCS.git","alias":"software-develop.VCS.git","position":{"start":{"line":16,"column":3,"offset":243},"end":{"line":16,"column":31,"offset":271},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"software-develop.VCS.git"}},{"type":"ref","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"about me","position":{"start":{"line":6,"column":1,"offset":35},"end":{"line":6,"column":27,"offset":61},"indent":[]},"xvault":false,"to":{"fname":"about me","anchorHeader":"简介:#*"}},{"type":"ref","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"programming-languages.python","position":{"start":{"line":7,"column":1,"offset":62},"end":{"line":7,"column":40,"offset":101},"indent":[]},"xvault":false,"to":{"fname":"programming-languages.python","anchorHeader":"介绍:#*"}}],"anchors":{"已完成":{"type":"header","text":"已完成","value":"已完成","line":10,"column":0,"depth":2},"施工中":{"type":"header","text":"施工中","value":"施工中","line":20,"column":0,"depth":2}},"children":["euj0yyfymzmig3lszs3vgow","6xsd9waf7ho7as5kzccut5h","e8hgfaxvmfjj1h1wq7pe5he","roizuhueed0r7bqvid0nz7l","p59utz7mf12ic3lqw8y8tbs","oasz9131g7t831nyxuti1qf","0cx4cn21i807ydan59xneso","a44h4sj21jfb19ymoovvuzr","i5z2gw9ou7tmimbwdsltnnz"],"parent":null,"data":{},"body":"\n记录我在工作和学习中掌握到的软件开发主题的知识。\n\n## 已完成\n\n![[个人介绍 | about me#简介:#*]]\n![[programming-languages.python#介绍:#*]]\n\n- [[basic.software.operating-system]]\n- [[security]]\n- [[software-develop.design]]\n- [[software-develop.design.Design Patterns]]\n\n## 施工中\n\n- [[software-develop.VCS.git]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"knowledge"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","siteUrl":"http://knowledge.duyixian.cn","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}