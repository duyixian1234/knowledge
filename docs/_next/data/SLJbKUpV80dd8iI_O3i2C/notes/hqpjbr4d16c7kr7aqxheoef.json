{"pageProps":{"note":{"id":"hqpjbr4d16c7kr7aqxheoef","title":"Multithreading","desc":"","updated":1660792180130,"created":1660790573564,"custom":{},"fname":"programming-languages.python.multithreading","type":"note","vault":{"fsPath":".","selfContained":true,"name":"knowledge"},"contentHash":"adebe2bc79749870cea7be0e7bc4f370","links":[{"from":{"id":"i7qra5ip0gwchs30f5at7rx","fname":"programming-languages.python","vaultName":"knowledge"},"type":"backlink","position":{"start":{"line":55,"column":3,"offset":2006},"end":{"line":55,"column":50,"offset":2053},"indent":[]},"value":"programming-languages.python.multithreading","alias":"programming-languages.python.multithreading"}],"anchors":{"gil":{"type":"header","text":"GIL","value":"gil","line":8,"column":0,"depth":2},"python多线程":{"type":"header","text":"Python多线程","value":"python多线程","line":12,"column":0,"depth":2},"threading标准库":{"type":"header","text":"threading标准库","value":"threading标准库","line":14,"column":0,"depth":3},"threadpoolexecutor":{"type":"header","text":"ThreadPoolExecutor","value":"threadpoolexecutor","line":18,"column":0,"depth":3},"示例":{"type":"header","text":"示例","value":"示例","line":22,"column":0,"depth":4}},"children":[],"parent":"i7qra5ip0gwchs30f5at7rx","data":{}},"body":"<h1 id=\"multithreading\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#multithreading\"></a>Multithreading</h1>\n<h2 id=\"gil\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#gil\"></a><a href=\"https://docs.python.org/zh-cn/3/glossary.html#term-global-interpreter-lock\">GIL</a></h2>\n<blockquote>\n<p>在 CPython 中，由于存在 全局解释器锁，同一时刻只有一个线程可以执行 Python 代码（虽然某些性能导向的库可能会去除此限制）。 如果你想让你的应用更好地利用多核心计算机的计算资源，推荐你使用 multiprocessing 或 concurrent.futures.ProcessPoolExecutor。 但是，如果你想要同时运行多个 I/O 密集型任务，则多线程仍然是一个合适的模型。</p>\n</blockquote>\n<h2 id=\"python多线程\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python多线程\"></a>Python多线程</h2>\n<h3 id=\"threading标准库\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#threading标准库\"></a>threading标准库</h3>\n<p>可以使用threading标准库的Thread类创建并管理线程，相对而言比较繁琐。</p>\n<h3 id=\"threadpoolexecutor\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#threadpoolexecutor\"></a>ThreadPoolExecutor</h3>\n<p>concurrent.futures 标准库提供了ThreadPoolExecutor类型，可以方便创建和使用线程池。</p>\n<h4 id=\"示例\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#示例\"></a>示例</h4>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> functools <span class=\"token keyword\">import</span> partial\n<span class=\"token keyword\">from</span> concurrent<span class=\"token punctuation\">.</span>futures <span class=\"token keyword\">import</span> ThreadPoolExecutor\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">:</span> requests<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>status_code\n\n<span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n    start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        fetch<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'http://httpbin.org/get?a=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'For Loop Cost: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">}</span></span><span class=\"token string\"> seconds'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># For Loop Cost: 26.713851928710938 seconds</span>\n\n<span class=\"token keyword\">with</span> ThreadPoolExecutor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pool<span class=\"token punctuation\">,</span>requests<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n    fetch_with_session <span class=\"token operator\">=</span> partial<span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">,</span> session <span class=\"token operator\">=</span> session<span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>fetch_with_session<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f'http://httpbin.org/get?a=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'ThreadPoolExecutor Cost: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">}</span></span><span class=\"token string\"> seconds'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ThreadPoolExecutor Cost: 3.781949758529663 seconds</span>\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/i7qra5ip0gwchs30f5at7rx\">Python</a></li>\n</ul>","noteIndex":{"id":"20dxao0uf8892hiam7spier","title":"个人知识库","desc":"","updated":1663479223433,"created":1660230632683,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"knowledge"},"contentHash":"1e78e79c903519387a7746c3bab665d6","links":[{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"basic.software.operating-system","alias":"basic.software.operating-system","position":{"start":{"line":9,"column":3,"offset":105},"end":{"line":9,"column":38,"offset":140},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"basic.software.operating-system"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"security","alias":"security","position":{"start":{"line":10,"column":3,"offset":143},"end":{"line":10,"column":15,"offset":155},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"security"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"software-develop.design","alias":"software-develop.design","position":{"start":{"line":11,"column":3,"offset":158},"end":{"line":11,"column":30,"offset":185},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"software-develop.design"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"software-develop.design.Design Patterns","alias":"software-develop.design.Design Patterns","position":{"start":{"line":12,"column":3,"offset":188},"end":{"line":12,"column":46,"offset":231},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"software-develop.design.Design Patterns"}},{"type":"wiki","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"software-develop.VCS.git","alias":"software-develop.VCS.git","position":{"start":{"line":16,"column":3,"offset":243},"end":{"line":16,"column":31,"offset":271},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"software-develop.VCS.git"}},{"type":"ref","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"about me","position":{"start":{"line":6,"column":1,"offset":35},"end":{"line":6,"column":27,"offset":61},"indent":[]},"xvault":false,"to":{"fname":"about me","anchorHeader":"简介:#*"}},{"type":"ref","from":{"fname":"root","id":"20dxao0uf8892hiam7spier","vaultName":"knowledge"},"value":"programming-languages.python","position":{"start":{"line":7,"column":1,"offset":62},"end":{"line":7,"column":40,"offset":101},"indent":[]},"xvault":false,"to":{"fname":"programming-languages.python","anchorHeader":"介绍:#*"}}],"anchors":{"已完成":{"type":"header","text":"已完成","value":"已完成","line":10,"column":0,"depth":2},"施工中":{"type":"header","text":"施工中","value":"施工中","line":20,"column":0,"depth":2}},"children":["euj0yyfymzmig3lszs3vgow","6xsd9waf7ho7as5kzccut5h","e8hgfaxvmfjj1h1wq7pe5he","roizuhueed0r7bqvid0nz7l","p59utz7mf12ic3lqw8y8tbs","oasz9131g7t831nyxuti1qf","0cx4cn21i807ydan59xneso","a44h4sj21jfb19ymoovvuzr","i5z2gw9ou7tmimbwdsltnnz"],"parent":null,"data":{},"body":"\n记录我在工作和学习中掌握到的软件开发主题的知识。\n\n## 已完成\n\n![[个人介绍 | about me#简介:#*]]\n![[programming-languages.python#介绍:#*]]\n\n- [[basic.software.operating-system]]\n- [[security]]\n- [[software-develop.design]]\n- [[software-develop.design.Design Patterns]]\n\n## 施工中\n\n- [[software-develop.VCS.git]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"knowledge"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true,"enableHandlebarTemplates":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}